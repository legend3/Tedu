回顾:
1.Linux:
   开源的操作系统，免费的
   服务器系统，java主要是服务器端开发
   目录(一个根:/)，挂载点，高
   pwd,ls,cd  
   绝对路径(根，以/开头)  相对路径(当前目录)
2.java开发环境:
   编译期:.java文件经过编译，生成.class字节码文件
   运行期:JVM加载.class并运行.class

   JVM:java虚拟机
   JRE:java运行环境 =JVM+java系统类库
   JDK:java开发工具包 =JRE+编译、运行等命令工具

3.eclipse:


Windows在开发java代码
最终部署到Linux服务器上去

Linux分两大类:
1.不带图形界面的----真正的服务器系统
2.带图形界面的------用着方便



把eclipse打开，把包建好
课后作业部分打开

当前:/opt/jdk 转到:/opt/eclipse
绝对: cd /opt/eclipse
相对: cd ..-------------/opt
      cd ../eclipse-----/opt/eclipse


假设当前/opt/eclipse下
./eclipse
/opt/eclipse/eclipse





正课:
1.变量:存数的，代词，指代的就是它所存的那个数
  1)声明:
      int a; //声明一个整型变量，名为a
      int b,c,d; //声明三个整型变量，名为b,c,d
  2)命名:
    2.1)只能由字母、数字、_和$符组成
        并且不能以数字开头
    2.2)严格区分大小写
    2.3)不能使用关键字
    2.4)可以中文命名，但不建议
        建议"见名知意"，"驼峰命名法"
  3)初始化:第一次赋值
    3.1)声明的同时初始化:
          int a=250; //声明整型变量a并赋值为250
    3.2)先声明后初始化:
          int a; //声明整型变量a
	  a=250; //给a赋值为250
  4)使用:
    4.1)必须与数据类型匹配
          int a=3.14; //编译错误，类型不匹配
    4.2)对变量的使用就是对它所存的那个数的使用
          int a=5;
          int b=a+10; //取出a的值5，加10后，再赋值给b
	  System.out.println(b); //输出b的值15
	  System.out.println("b"); //b---原样输出
	  a=a+10; //取出a的值5，加10后，再赋值给a
	          //在a本身基础之上增10
	  System.out.println(a); //15
    4.3)变量在用之前，必须声明并初始化
          System.out.println(m); //编译错误，m未声明
	  int m;
	  System.out.println(m); //编译错误，m未初始化



字节(Byte)是计量单位，表示数据量多少，是计算机存储容量的计量单位。一个字节占8位。

字符(Character)计算机中使用的文字和符号，比如'A'、'B'、'$'、'&'等。

2.基本数据类型:
  1)int:整型，4个字节，-21个多亿到21个多亿
    1.1)整数直接量默认int型，不能超范围，超范围则编译错误
    1.2)两个整数相除，结果还是整数，小数位无条件舍弃
    1.3)运算时超范围则发生溢出，需要避免的
  2)long:长整型，8个字节，很大很大
    2.1)long型直接量即为在数字后加L或l
    2.2)运算时有可能溢出时，建议在第1个数字后加L
    2.3)System.currentTimeMillis()获取
        自1970.1.1零时到此时此刻的毫秒数
  3)double:浮点型，8个字节，很大很大
    3.1)浮点数直接量默认为double型，表示float则加f或F
    3.2)double运算时会有舍入误差，精确运算场合不能使用
  4)char:字符型，2个字节
    4.1)char采用的是Unicode编码格式
        *每个字符char都有一个对应的码int
	表现形式是char，实质上是int
    4.2)字符直接量必须放在一对单引号中
        有且仅有一个
    4.3)特殊符号需通过\来转义
  5)boolean:布尔型，1个字节
    5.1)只能取值为true和false

网络补充：
1. Java的简单类型及其封装器类
Java基本类型共有八种，基本类型可以分为三类，字符类型char，布尔类型boolean以及数值类型byte、short、int、long、float、double。数值类型又可以分为整数类型byte、short、int、long和浮点数类型float、double。JAVA中的数值类型不存在无符号的，它们的取值范围是固定的，不会随着机器硬件环境或者操作系统的改变而改变。实际上，JAVA中还存在另外一种基本类型void，它也有对应的包装类 java.lang.Void，不过我们无法直接对它们进行操作。8 中类型表示范围如下：

byte：8位，最大存储数据量是255，存放的数据范围是-128~127之间。

short：16位，最大数据存储量是65536，数据范围是-32768~32767之间。

int：32位，最大数据存储容量是2的32次方减1，数据范围是负的2的31次方到正的2的31次方减1。

long：64位，最大数据存储容量是2的64次方减1，数据范围为负的2的63次方到正的2的63次方减1。

float：32位，数据范围在3.4e-45~1.4e38，直接赋值时必须在数字后加上f或F。

double：64位，数据范围在4.9e-324~1.8e308，赋值时可以加d或D也可以不加。

boolean：只有true和false两个取值。

char：16位，存储Unicode码，用单引号赋值。

Java决定了每种简单类型的大小。这些大小并不随着机器结构的变化而变化。这种大小的不可更改正是Java程序具有很强移植能力的原因之一。下表列出了Java中定义的简单类型、占用二进制位数及对应的封装器类。

注意：float、double两种类型的最小值与Float.MIN_VALUE、 Double.MIN_VALUE的值并不相同，实际上Float.MIN_VALUE和Double.MIN_VALUE分别指的是 float和double类型所能表示的最小正数。也就是说存在这样一种情况，0到±Float.MIN_VALUE之间的值float类型无法表示，0 到±Double.MIN_VALUE之间的值double类型无法表示。这并没有什么好奇怪的，因为这些范围内的数值超出了它们的精度范围。

Float和Double的最小值和最大值都是以科学记数法的形式输出的，结尾的"E+数字"表示E之前的数字要乘以10的多少倍。比如3.14E3就是3.14×1000=3140，3.14E-3就是3.14/1000=0.00314。

Java基本类型存储在栈中，因此它们的存取速度要快于存储在堆中的对应包装类的实例对象。从Java5.0（1.5）开始，JAVA虚拟机（Java Virtual Machine）可以完成基本类型和它们对应包装类之间的自动转换。因此我们在赋值、参数传递以及数学运算的时候像使用基本类型一样使用它们的包装类，但这并不意味着你可以通过基本类型调用它们的包装类才具有的方法。另外，所有基本类型（包括void）的包装类都使用了final修饰，因此我们无法继承它们扩展新的类，也无法重写它们的任何方法。

基本类型的优势：数据存储相对简单，运算效率比较高

包装类的优势：有的容易，比如集合的元素必须是对象类型，满足了java一切皆是对象的思想



3.基本数据类型间的转换:-----下次课结束讲

4.Scanner的用法: 通过 Scanner 类来获取用户的输入
  1)在package下:
      import java.util.Scanner;
  2)在main()大括号中:
      Scanner scan = new Scanner(System.in);
  3)在第2步之下:
      System.out.println("请输入年龄:");
      int age = scan.nextInt();
      System.out.println("请输入午餐消费的金额:");
      double price = scan.nextDouble();

练习:-------写在day03的包中
1.创建类Age
    要求:接收用户输入的年龄age(int)，并输出
2.创建类LeapYear
    要求:接收用户输入的年份year(int)，并输出
3.创建类ScoreLevel
    要求:接收用户输入的成绩score(int)，并输出
4.创建类CommandBySwitch
    要求:接收用户输入的命令command(int)，并输出

课后作业:
1)第7,10,11,12-------不用做
2)第13题-----做在Day03的包中













int age = 37;





给变量赋值的三种方式:
int a = 250; //固定的数
int b = ?;   //由用户输入
int c = ?;   //由系统随机生成















ASCII码:
  'a'--97  'A'--65  '0'--48

char c1 = 97;
System.out.println(c1); //a


0----------0
'0'--------48


System.out.println(2+2);     //4
System.out.println('2'+'2'); //100
System.out.println(2+'2');   //52



char c1 = '\\';
System.out.println(c1);   //'












字符char是表现的形式，实质上是码int



char字符    int码
敌----------1234
军----------5678
来----------9876
袭----------4321














2147483647-------(+2147483647)
--------(-2)





-2147483648-------+1
-2147483647-------+2
-2147483646-------+3










DataTypeDemo





double a=3.0;
double b=2.9;
System.out.println(a-b); //0.1000000000009

double a=6.0;
double b=4.9;
System.out.println(a-b); //1.0999999999996


精确运算场合不能使用------


BigDecimal







数学(10进制)中无法精确表示1/3和2/3

1/3---------0.3333333333...
2/3---------0.6666666666...


1/2---------0.5
3/6---------0.5
9/10--------0.9







int a=10000000000;   //编译错误
int b=1000000000*10; //溢出













long a = 1000000000*2*10L;
System.out.println(a); //200亿

long b = 1000000000*3*10L;
System.out.println(b); //不是300亿

long c = 1000000000L*3*10;
System.out.println(c); //300亿




1970.1.1零时到此时此刻----long
365*24*60*60*1000----31536000000













int balance=2147483647;
balance=balance+1;
System.out.println(balance); //-2147483648


9000000001000000000









100亿


1G=1024M(兆)
1M=1024KB(千字节)
1KB=1024B(字节)
1B=8Bit(位)

int:4
long:8

1G=1024*1024*1024字----1073741824







够用就行


int:4个字节
long:8个字节

年龄-----int

不同类型所占用的内存空间大小----是不同的







年龄------


int-----负21个多亿到21个多亿
long----很大很大


数据类型的选择原则-----够用就行






意义:适应不同人的不同需求

1个人


别墅
四居室
三居室
两居室
一居室
开间
地下室
















C语言:
int a; 输出a---不报错，但随机给你一个值

java语言:
int a; 输出a----编译错误











int a=37; //不建议
int 年龄=37;     //直观但不专业
int nianLing=37; //既不直观也不专业
int age=37; //直观且专业


score,myScore,myJavaScore---驼峰命名法

twoAbcMno
二卷变压器









I       love       You
张三              李四
李四              王五
王五              赵六
赵六              张三








早期计算机------算数
现在计算机------算数


www.taobao.com--------------一个数据
淘宝首页--------------------一堆数据
花王尿不湿------------------一个数据
一堆花王尿不湿--------------一堆数据
详细------------------------一堆数据
购物车----------------------一堆数据
结算------------------------一堆数据








