<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0"
         metadata-complete="true">
<!--
    Servlet生命周期:
        Tomcat启动
        web.xml<-<init-param>、<context-param>
        ServiceContext、ServiceConfig
        <load-on-startup>->Servlet
        Servlet
        init()
        serice()
        destroy()
 -->
  <servlet>
  	<servlet-name>demo</servlet-name>
  	<servlet-class>web.DemoServlet</servlet-class>
  	<!-- 启动时创建此Servlet，1代表创建的次序。 
  		*1)load-on-startup 元素标记容器是否应该在启动的时候加载这个servlet，(实例化并调用其init()方法)。
		2)它的值必须是一个整数，表示servlet应该被载入的顺序
		3)如果该元素不存在或者这个数为负时，则容器会当该Servlet被请求时，再加载。
		4)当值为0或者大于0时，表示容器在应用启动时就加载并初始化这个servlet；
		5)正数的值越小，该servlet的优先级越高，应用启动时就越先加载。
		6)当值相同时，容器就会自己选择顺序来加载。(当然我写了几个测试程序，没有抓住它的规律性，我们暂且理解为容器自主选择！)
  	-->
  	<load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
  	<servlet-name>demo</servlet-name>
  	<url-pattern>/demo</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>login</servlet-name>
  	<servlet-class>web.LoginServlet</servlet-class>
  	<!-- 给当前Servlet预置一个数据 -->
  	<init-param>
  		<param-name>maxOnline</param-name>
  		<param-value>2000</param-value>
  	</init-param>
  </servlet>
  <servlet-mapping>
  	<servlet-name>login</servlet-name>
  	<url-pattern>/login</url-pattern>
  </servlet-mapping>
  
  <!-- 
  	给所有的Servlet预置一个数据。
  	1.Tomcat启动时会自动创建ServletContext对象。
  	2.Tomcat调用context读取此参数size。
  	由于这件事是在调用Servlet之前完成的，
  	所以在service()中可以通过context读取参数。
  -->
  <context-param>
  	<param-name>size</param-name>
  	<param-value>10</param-value>
  </context-param>
  
  <servlet>
  	<servlet-name>findDept</servlet-name>
  	<servlet-class>web.FindDeptServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>findDept</servlet-name>
  	<url-pattern>/findDept</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>findEmp</servlet-name>
  	<servlet-class>web.FindEmpServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>findEmp</servlet-name>
  	<url-pattern>/findEmp</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>init</servlet-name>
  	<servlet-class>web.InitServlet</servlet-class>
  	<load-on-startup>2</load-on-startup>
  </servlet>
  <servlet-mapping>
  	<servlet-name>init</servlet-name>
  	<url-pattern>/init</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>test</servlet-name>
  	<servlet-class>web.TestServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>test</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
</web-app>




