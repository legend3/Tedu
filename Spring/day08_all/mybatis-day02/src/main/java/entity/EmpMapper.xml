<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="dao.EmpDAO">
	<!-- 
		插入记录。
		id属性：要求唯一。
		parameterType:要写完整的实体类类名。
	 -->
	<insert id="save" parameterType="entity.Emp">
		INSERT INTO emp 
		VALUES(emp_seq.nextval,#{name},#{age})
	</insert>
	
	<!-- 
		查询记录。
		resultType属性：查询出来的记录要转换成
		相应的对象的类型。
	 -->
	 <select id="findAll" resultType="entity.Emp">
	 	SELECT * FROM emp
	 </select>
	 
	 <!-- 
	 	查询。
	 		parameterType:如果参数值是一个整数，
	 		官方用法是 java.lang.Integer,可以简
	 		写为"int"。
	  -->
	 <select id="findById" 
	 	parameterType="int" resultType="entity.Emp">
	 	SELECT * FROM emp WHERE id = #{id1}
	 </select>
	 
	 <update id="update" parameterType="entity.Emp">
	 	UPDATE emp 
	 	SET name = #{name},age = #{age}
	 	WHERE id = #{id}
	 </update>
	
	<delete id="delete" parameterType="int">
		DELETE FROM emp WHERE id=#{id1}
	</delete>
	
	<!-- 
		返回Map类型的查询结果。
		java.util.Map 可以简写为map。
	 -->
	<select id="findById2" 
	parameterType="int" resultType="map">
		SELECT * FROM emp WHERE id = #{id1}
	</select>
	
	<!-- 
		使用resultMap来解决实体类的属性名与
		表的字段名不一致的情况。
		type属性：实体类的名字。
		property属性：实体类的属性名。
		column属性：表的字段名。
		注：如果属性名与字段名一样，就不用写了。
	 -->
	<resultMap type="entity.Emp2" id="empRM">
		<result property="empNo" column="id"/>
		<result property="eName" column="name"/>
	</resultMap>
	<select id="findById3" 
	parameterType="int" resultMap="empRM">
		SELECT * FROM emp WHERE id = #{id1}
	</select>
	
	
	
	
	
</mapper>